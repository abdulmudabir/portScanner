
==========================================================================================
# Milestone1
==========================================================================================
* be able to parse all command line arguments, read IP addresses
from input files, and convert the supplied IP prefixes to a list of individual IP addresses
	• --help. Example: “./portScanner --help”.
	• --ports <ports to scan>. Example: “./portScanner --ports 1,2,3-5”.
	• --ip <IP address to scan>. Example: “./portScanner --ip 127.0.0.1”.
	• --prefix <IP prefix to scan>. Example: “./portScanner --prefix 127.143.151.123/24”.
	• --file <file name containing IP addresses to scan>. Example: “./portScanner --file filename.txt”.
	• --speedup <parallel threads to use>. Example: “./portScanner --speedup 10”.
	• --scan <one or more scans>. Example: “./portScanner --scan SYN NULL FIN XMAS”.
* print out to the terminal the list of IP addresses that the program was supplied with
* add verbose mode ?

# code refactor
* can the "vector<int> ports_vect" be included in the ArgsParser class instead of being in global scope ?
* can reduce number of variables in parse_prefixes by passing args to convert_endianness() by &

# Test cases for cli args parsing
* remove duplicates in all vectors
	** test case: ./portScanner --ports 65-70,80,67-91
	** case for IPs: ./portScanner --ip 129.79.247.3 --prefix 129.79.247.87/24
* "--ports "
	** default ports 1-1024 if not specified (DONE)
	** reject input "--ports -23" (DONE)
	** reject input "--ports 1-10,-42,90-100" (DONE)
	** reject input "--ports -27-40" (DONE)
	** reject input "--ports 12--90" (DONE)
* can ipAddresses.txt file contain IP prefixes too ? (yes, DONE)
* validate correct IP and correct prefix with "--prefix" (IP check same as that for "--ip")
	** reject "--ip 17" (DONE)
	** reject input like 127.2.3.54.79 (invalid coz 5 octets) (DONE)
	** reject IP prefix like 172.16/12 (DONE)
	** reject input like 0.1.2.3 (Invalid IP addr coz reserved) and thus, ignore IETF & IANA specified reserved IP addresses (had to recall attempt to do this; coz list should be huge, generating it throws std::bad_alloc() error, then aborts) (NOT DONE)
	** reject input like "-129.-42.8.-3" (DONE, gethostbyname() naturally does this)
	** reject prefix 127.0.0.1/24/16 ( TO DO )
	** reject "--ip 127.b0.4A.1" ( DONE, by gethostbyname() )
	** reject "--prefix -127.0.0.-2/24" ( DONE, by inet_aton() )
* "--file filename"
	** reject file line like "159.23.1.24 	hi there 172.68.42.23" (DONE)
* "--speedup "
	** negative number or '0' number of threads check ? (DONE)
	** float entered for number of threads, check ? (DONE, accept it and let int round it down)
	** string entered for number of threads, check ? (DONE)
* "--scan "
	